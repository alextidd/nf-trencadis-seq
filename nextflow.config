// TODO: add back later? params.min_MQ = 30
params {
  help              = false
  samplesheet       = null
  genes             = null
  no_cell_barcodes  = false
  no_celltypes      = false
  gencode_gff3      = "${baseDir}/data/gencode_gff3/GRCh38/gencode.v39.annotation.gff3.gz"
  refcds            = "${baseDir}/data/refcds/GRCh38/RefCDS_human_GRCh38_GencodeV18_recommended.rda"
  no_chr            = false
  min_cov           = 1
  min_MQ            = 0
  min_BQ            = 0
  location          = 'local'
  out_dir           = 'out/'
  plot_device       = "png"
}

// use nf-schema for param handling
plugins {
  id 'nf-schema@2.2.0'
}

// help message
validation {
  help {
    enabled = true
  }
}

// add resource labels
process {
  errorStrategy = { task.exitStatus in [9,104,130,134,137,138,139,140,143] ? 'retry' : 'terminate' }
  maxRetries = 6
  withLabel: normal {
      queue = "normal"
      cpus = 1
      memory = { 2.GB * task.attempt }
  }
  withLabel: normal4core {
      queue = "normal"
      cpus = 4
      memory = { 2.GB * task.attempt }
  }
  withLabel: normal10gb {
      queue = "normal"
      cpus = 1
      memory = { 10.GB * task.attempt }
  }
  withLabel: normal100gb {
      queue = "normal"
      cpus = 1
      memory = { 100.GB * task.attempt }
  }
  withLabel: week10gb {
      queue = "week"
      cpus = 1
      memory = { 10.GB * task.attempt }
  }
  withLabel: week50gb {
      queue = "week"
      cpus = 1
      memory = { 50.GB * task.attempt }
  }
  withLabel: week100gb {
      queue = "week"
      cpus = 1
      memory = { 100.GB * task.attempt }
  }
  withLabel: long {
      queue = "long"
      cpus = 1
      memory = { 2.GB * task.attempt }
  }
  withLabel: long16core {
      queue = "long"
      cpus = 16
      memory = { 2.GB * task.attempt }
  }
  withLabel: long10gb {
      queue = "long"
      cpus = 1
      memory = { 10.GB * task.attempt }
  }
  withLabel: long16core10gb {
      queue = "long"
      cpus = 16
      memory = { 10.GB * task.attempt }
      scratch = true
  }
  withLabel: long20gb {
      queue = "long"
      cpus = 1
      memory = { 20.GB * task.attempt }
  }
  withLabel: long16core64gb {
      queue = "long"
      cpus = 16
      memory = { 64.GB * task.attempt }
      scratch = true
  }
  withLabel: long16core100gb {
      queue = "long"
      cpus = 16
      memory = { 64.GB * task.attempt }
      scratch = true
  }
  withLabel: week {
      queue = "week"
      cpus = 1
      memory = { 2.GB * task.attempt }
  }
  withLabel: week16core10gb {
      queue = "week"
      cpus = 16
      memory = { 10.GB * task.attempt }
  }
  withLabel: normal16core20gb {
      queue = "normal"
      cpus = 16
      memory = { 20.GB * task.attempt }
  }
  withLabel: normal20gb {
      queue = "normal"
      cpus = 1
      memory = { 20.GB * task.attempt }
  }
  withLabel: normal4core20gb {
    queue = "normal"
    cpus = 4
    memory = { 20.GB * task.attempt }
  }
  withLabel: normal50gb {
      queue = "normal"
      cpus = 1
      memory = { 50.GB * task.attempt }
  }
  withLabel: basement50gb {
    queue = "basement"
    cpus = 1
    memory = { 50.GB * task.attempt }
  }
}